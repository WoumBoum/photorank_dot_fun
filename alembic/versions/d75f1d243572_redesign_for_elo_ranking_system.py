"""redesign for elo ranking system

Revision ID: d75f1d243572
Revises: d7a3a262e1b8
Create Date: 2025-07-14 16:50:18.470645

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd75f1d243572'
down_revision = 'd7a3a262e1b8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('elo_rating', sa.Float(), nullable=False),
    sa.Column('total_duels', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_table('upload_limits',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('upload_count', sa.Integer(), nullable=False),
    sa.Column('last_upload_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.drop_table('posts')
    op.add_column('users', sa.Column('username', sa.String(), nullable=False))
    op.add_column('users', sa.Column('provider', sa.String(), nullable=False))
    op.add_column('users', sa.Column('provider_id', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['provider_id'])
    op.drop_column('users', 'password')
    op.add_column('votes', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('votes', sa.Column('winner_id', sa.Integer(), nullable=False))
    op.add_column('votes', sa.Column('loser_id', sa.Integer(), nullable=False))
    op.add_column('votes', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('votes_post_id_fkey', 'votes', type_='foreignkey')
    op.create_foreign_key(None, 'votes', 'photos', ['winner_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'votes', 'photos', ['loser_id'], ['id'], ondelete='CASCADE')
    op.drop_column('votes', 'post_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('votes', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'votes', type_='foreignkey')
    op.drop_constraint(None, 'votes', type_='foreignkey')
    op.create_foreign_key('votes_post_id_fkey', 'votes', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.drop_column('votes', 'created_at')
    op.drop_column('votes', 'loser_id')
    op.drop_column('votes', 'winner_id')
    op.drop_column('votes', 'id')
    op.add_column('users', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'provider_id')
    op.drop_column('users', 'provider')
    op.drop_column('users', 'username')
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('published', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='post_users_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.drop_table('upload_limits')
    op.drop_table('photos')
    # ### end Alembic commands ###
