name: Build and Deploy code

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    environment:
      name: testing

    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: fastapi_test
      DATABASE_USERNAME: postgres
      
      SECRET_KEY: test-secret-key-for-github-actions
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_test
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    
    steps:
      - name: Pull Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python v3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: pip install -r requirements.txt

      - name: Create test database
        run: |
          sudo apt-get install -y postgresql-client
          PGPASSWORD=postgres psql -h localhost -U postgres -p 5432 -c "CREATE DATABASE fastapi_test_test;"

      - name: Run basic functionality tests
        run: python test_basic.py
        working-directory: ${{ github.workspace }}

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      
  # deploy-to-heroku:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment:
  #     name: production

  #   steps:
  #     - name: Deploying stuff to Heroku
  #       run: echo "Going to deploy some stuff on Heroku"
      